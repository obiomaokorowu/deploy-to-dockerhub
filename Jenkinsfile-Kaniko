pipeline {
    environment {
        AWS_ACCESS_KEY_ID = credentials('aws_access_key_id')
        AWS_SECRET_ACCESS_KEY = credentials('aws_secret_access_key')
        AWS_ACCOUNT_ID = "590183877304"
        AWS_DEFAULT_REGION = "eu-west-1"
        IMAGE_REPO_NAME = "test"
    }

    agent {
        label "kaniko"
    }

    stages {
        stage('Build') {
            steps {
                container('maven') {
                    sh 'mvn clean package'
                }
            }
            post {
                success {
                    archiveArtifacts artifacts: 'target/hello-world.war', fingerprint: true
                }
            }
        }

        stage('Building Docker image') {
            steps {
                container('kaniko') {
                    script {
                        def REPOSITORY_URI = "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${IMAGE_REPO_NAME}"
                        def IMAGE_TAG = "${BUILD_ID}"
                        sh '''/kaniko/executor \\
                            --build-arg="-v $PWD:/workspace" \\
                            --context git://github.com/obiomaokorowu/deploy-to-dockerhub.git \\
                            --context-sub-path . \\
                            --dockerfile Dockerfile \\
                            --cache-repo git://github.com/obiomaokorowu/deploy-to-dockerhub.git \\
                            --destination ${REPOSITORY_URI}:${IMAGE_TAG}
                        '''
                    }
                }
            }
        }

        // Uncomment the following stages if needed
        // stage('Deploy Image') {
        //     steps {
        //         script {
        //             docker.withRegistry('', registryCredential) {
        //                 dockerImage.push("$BUILD_NUMBER")
        //                 dockerImage.push('latest')
        //             }
        //         }
        //     }
        // }

        // stage('Remove Unused docker image') {
        //     steps {
        //         sh "docker rmi $imagename:$BUILD_NUMBER"
        //         sh "docker rmi $imagename:latest"
        //     }
        // }
    }
}
