pipeline {
    environment {
        AWS_ACCESS_KEY_ID = credentials('aws_access_key_id')
        AWS_SECRET_ACCESS_KEY = credentials('aws_secret_access_key')
        AWS_ACCOUNT_ID = "590183877304"
        AWS_DEFAULT_REGION = "eu-west-1"
        IMAGE_REPO_NAME = "test"
    }

    agent {
        label "kaniko"
    }

    stages {
        stage('Building Docker image') {
            steps {
                container('kaniko') {
                    script {
                        def REPOSITORY_URI = "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${IMAGE_REPO_NAME}"
                        def IMAGE_TAG = "latest"
                        sh '''/kaniko/executor \\
                            --build-arg="-v $PWD:/workspace" \\
                            --context git://github.com/obiomaokorowu/deploy-to-dockerhub.git \\
                            --dockerfile Dockerfile \\
                            --cache-repo git://github.com/obiomaokorowu/deploy-to-dockerhub.git \\
                            --destination ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${IMAGE_REPO_NAME}:${IMAGE_TAG}
                        '''
                    }
                }
            }
        }

       stage('pull image & Deploying application on k8s cluster') {
                    environment {
                       AWS_ACCESS_KEY_ID = credentials('aws_access_key_id')
                       AWS_SECRET_ACCESS_KEY = credentials('aws_secret_access_key')
                 }
                    steps {
                      script{
                        def IMAGE_TAG = "latest"
                        container('helm'){
                          withAWS(role: "tf_sandbox_role", roleAccount: '590183877304') {
                          sh 'aws eks update-kubeconfig --name eks-csl_pay-sandbox-apps --region eu-west-1'
                          sh 'helm upgrade --install --namespace default --set image.repository="${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${IMAGE_REPO_NAME}" --set image.tag="latest" tomcat-app ./webapp -f ./webapp/values.yaml' 
                          }
 
                        }
                    }
               }
            }
   }
}
