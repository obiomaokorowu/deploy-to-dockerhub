  
pipeline {
  environment {
           AWS_ACCESS_KEY_ID = credentials('aws_access_key_id')
           AWS_SECRET_ACCESS_KEY = credentials('aws_secret_access_key')
                  }
  agent {
     label "kaniko"
      }

     stages {
          stage ('Build') {
           steps {
             script{
               container('maven'){
           sh 'mvn clean package'
                }
            }
          }
        }   


          stage('Building Docker image') {
                    environment {
                DOCKERFILE  = "Dockerfile"
                GITREPO     = "git://github.com/obiomaokorowu/deploy-to-dockerhub.git"
                CONTEXT     = "${GITREPO}"
                VERSION = "${env.BUILD_ID}"
                AWS_ACCOUNT_ID="590183877304"
                AWS_DEFAULT_REGION="eu-west-1"
                IMAGE_REPO_NAME="test"
                IMAGE_TAG= "${env.BUILD_ID}"
                REPOSITORY_URI = "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${IMAGE_REPO_NAME}"

            }
               steps{
                   script {
                     container('kaniko'){
                       sh '''/kaniko/executor  \\
                    --context=\${GITREPO} \\
                    --context-sub-path=\${CONTEXT} \\
                    --dockerfile=\${DOCKERFILE} \\
                    --cache-repo=\${GITREPO} \\
                    --destination=${REPOSITORY_URI}:${IMAGE_TAG}
                       '''
                          }
                   }
               }
          }

          // stage('Deploy Image') {
          //      steps{
          //            script {
          //                docker.withRegistry( '', registryCredential ) {
          //                dockerImage.push("$BUILD_NUMBER")
          //                dockerImage.push('latest')
          //                                     }
          //                }
          //      }
          // }

          // stage('Remove Unused docker image') {
          //      steps{
          //           sh "docker rmi $imagename:$BUILD_NUMBER"
          //           sh "docker rmi $imagename:latest"
          //           }
          // }
    
     }
}
